# -*- coding: utf-8 -*-
"""Task 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1evBdLZw4wLD3WUfcG3MM-pR9zBFTHA93
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
# %matplotlib inline

columns = ['Sepal length', 'Sepal width', 'Petal lenght', 'Petal width', 'Class_labels']
#load the data
df = pd.read_csv('iris.data', names=columns)
df.head()

df.describe()

sns.pairplot(df, hue='Class_labels')

data = df.values

X = data[:,0:4]
Y = data[:,4]
print(Y)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2)
print(X_train)

from sklearn.svm import SVC

model_svc = SVC()
model_svc.fit(X_train, y_train)

prediction1 = model_svc.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test, prediction1)*100)
for i in range (len(prediction1)):
  print(y_test[i], prediction1[i])

from sklearn.linear_model import LogisticRegression
model_LR=LogisticRegression()
model_LR.fit(X_train,y_train)

prediction2 = model_LR.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test, prediction2)*100)
for i in range (len(prediction2)):
  print(y_test[i], prediction2[i])

from sklearn.tree import DecisionTreeClassifier
model_DTC=DecisionTreeClassifier()
model_DTC.fit(X_train,y_train)

prediction3 = model_svc.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test, prediction3)*100)

from sklearn.metrics import classification_report
print(classification_report(y_test, prediction2))

X_new = np.array([[3, 2, 1, 0.2],[ 4.9, 2.2, 3.8, 1.1 ],[ 5.3, 2.5, 4.6, 1.9 ]])
prediction = model_svc.predict(X_new)
print("Prediction of Species: {}".format(prediction))